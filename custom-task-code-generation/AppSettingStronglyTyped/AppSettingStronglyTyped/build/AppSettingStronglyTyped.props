<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!--defining properties interesting for my task-->
	<PropertyGroup>
		<!--default directory where the .dll was publich inside a nuget package-->
		<taskForldername>lib</taskForldername>
		<taskFramework>netstandard2.0</taskFramework>
		<!--The folder where the custom task will be present. It points to inside the nuget package. It could be override during development time to get directly from the project compile directory -->
		<CustomTasksFolder Condition="'$(CustomTasksFolder)' == ''">$(MSBuildThisFileDirectory)\..\$(taskForldername)\$(taskFramework)</CustomTasksFolder>
		<!--Reference to the assembly which contains the MSBuild Task-->
		<CustomTasksAssembly>$(CustomTasksFolder)\$(MSBuildThisFileName).dll</CustomTasksAssembly>
	</PropertyGroup>

	<!--Register our custom task-->
	<UsingTask TaskName="$(MSBuildThisFileName).$(MSBuildThisFileName)" AssemblyFile="$(CustomTasksAssembly)"/>

	<!--Task parameters default values, this can be overridden-->
	<PropertyGroup>
		<RootFolder Condition="'$(RootFolder)' == ''">$(MSBuildProjectDirectory)</RootFolder>
		<SettingClass Condition="'$(SettingClass)' == ''">MySetting</SettingClass>
		<SettingNamespace Condition="'$(SettingNamespace)' == ''">example</SettingNamespace>
		<SettingExtensionFile Condition="'$(SettingExtensionFile)' == ''">mysettings</SettingExtensionFile>
	</PropertyGroup>
</Project>